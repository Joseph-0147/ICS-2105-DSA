#include <stdio.h>

int removeDuplicates(int nums[], int numsSize) {
    if (numsSize <= 1) {
        return numsSize;
    }

    // Initialize two pointers
    int slowPointer = 0;

    // Iterate through the array with the fast pointer
    for (int fastPointer = 1; fastPointer < numsSize; fastPointer++) {
        // If the current element is different from the previous one
        if (nums[fastPointer] != nums[slowPointer]) {
            // Move the slow pointer to the next position
            slowPointer++;
            // Update the value at the slow pointer with the new unique element
            nums[slowPointer] = nums[fastPointer];
        }
    }

    // The length of the new array is the position of the slow pointer + 1
    return slowPointer + 1;
}

int main() {
    int nums[] = {1, 1, 2, 2, 3, 4, 4, 5, 6, 7, 7, 7, 8};
    int numsSize = sizeof(nums) / sizeof(nums[0]);

    int newLength = removeDuplicates(nums, numsSize);

    printf("New Length: %d\n", newLength);
    printf("Modified Array: ");
    for (int i = 0; i < newLength; i++) {
        printf("%d ", nums[i]);
    }

    return 0;
}

// output:New Length: 8
// Modified Array: 1 2 3 4 5 6 7 8 
